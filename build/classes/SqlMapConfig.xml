<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">


<!-- 
	MyBatis配置文件，包含如下知识点：
		1、加载属性文件
		2、别名typeAliases定义
		3、mapper映射文件的加载
 -->

<configuration>

	<!-- 加载db属性文件 -->
	<properties resource="db.properties">
	
		<!-- 在properties内还可以再定义属性 -->
		<property name="jdbc.test.property" value="123456"/>
		
		<!-- 注意：MyBatis 将按照下面的顺序来加载属性（这些属性可以用在mapper.xml中的sql语句中）：
			1、在 properties 元素体内定义的属性首先被读取。 
			2、然后会读取properties 元素中resource或 url 加载的属性，它会覆盖已读取的同名属性。 
			3、最后读取parameterType传递的属性，它会覆盖已读取的同名属性。
	 	-->
	 
	 	<!-- 建议：
	 		1、不要在properties元素体内添加任何属性值，只将属性值定义在properties文件中
	 		2、在properties文件中定义属性名要有一定的特殊性，如：XXXX.XXX.XX
	  	-->
		
	</properties>
	
	<!-- 全局配置 -->
	<settings>
	
	  	<!-- 打开延迟加载开关 -->
	  	<setting name="lazyLoadingEnabled" value="true"/>
	  	<!-- 将积极加载改为消极加载（按需加载） -->
	  	<setting name="aggressiveLazyLoading" value="false"/>
	  	
	  	<!-- 开启二级缓存 -->
	  	<setting name="cacheEnabled" value="true"/>
	
	</settings>
	  
	  
	<!-- typeAliases(别名) -->  
	<!-- 需求：
			在mapper.xml中，定义很多的statement，statement需要parameterType指定输入参数的类型、需要resultType指定输出结果的映射类型
			如果在指定类型时输入类型全路径，不方便进行开发，可以针对parameterType或resultType指定的类型定义一些别名，在mapper.xml中通过别名定义，方便开发
	 -->
	 
	 <!-- MyBatis默认支持的别名：
	 		_byte 		byte 
			_long 		long 
			_short 		short 
			_int 		int 
			_integer 	int 
			_double 	double 
			_float 		float 
			_boolean 	boolean 
			string 		String 
			byte 		Byte 
			long 		Long 
			short 		Short 
			int 		Integer 
			integer 	Integer 
			double 		Double 
			float 		Float 
			boolean 	Boolean 
			date 		Date 
			decimal 	BigDecimal 
			bigdecimal 	BigDecimal 
	  -->
	 
	 <typeAliases>
	 	
	 	<!-- 两种定义别名的方式： -->
	 	<!-- 1、针对单个别名的设置，type：类型的路径，alias：别名 -->
	 	<!-- <typeAlias type="com.weicheng.po.User" alias="user"/>  -->
	 
	 	<!-- 2、批量定义别名 ：指定包名，mybatis会自动扫描包中的po类，自动定义别名，别名就是类名（首字母大写或小写都可以）-->
	 	<package name="com.weicheng.po"/>
	 
	 </typeAliases>
	 
	 
	  
	  

	

	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	
	 

	<!-- 加载映射文件 -->
	<mappers>
		
		<!-- 单个mapper文件加载 -->		
		<mapper resource="sqlmap/UserMapper.xml" />
		
		<!-- 如使用mapper代理方法，也可使用以下两种mapper加载方式，但是需要遵循如下规范：
				需要将mapper.java和mapper.xml文件名称保持一致，且在同一个目录中
		 -->
		 
		 <!-- 1、单个mapper接口文件的加载 -->
		 <!-- <mapper class="com.weicheng.mapper.UserMapper"/> -->
		 
		 <!-- 2、批量加载mapper：让mybatis自动扫描指定包下边的mapper.java接口 -->
		 <package name="com.weicheng.mapper"/>
		
		
	</mappers>


</configuration>

